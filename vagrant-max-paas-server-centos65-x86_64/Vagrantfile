
# Launch and provision multiple Linux distributions with Vagrant <http://vagrantup.com>
#
# Support:
#
# * centos6:     CentOS 6.5 64 bit (primary server box)
#
# See:
#
#   $ vagrant status
#
# The virtual machines are automatically provisioned upon startup with Chef-Solo
# <http://vagrantup.com/v1/docs/provisioners/chef_solo.html>.


# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|


  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "centos-65-x64-virtualbox-puppet"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-65-x64-virtualbox-puppet.box"
  #config.vm.share_folder "app", "/home/vagrant/app", "app"


  # Tomcat forwarded port
  config.vm.network :forwarded_port, guest: 8080, host: 8080

  # private network
  #config.vm.network :private_network, ip: '33.33.33.11'

  # Nginx forwarded port
  #config.vm.network :forwarded_port, guest: 80, host: 8000

  config.vm.provision :puppet do |puppet|

    puppet.working_directory = "/tmp/vagrant-puppet/manifests"
    puppet.manifests_path = "puppet/manifests"
    puppet.module_path = "puppet/modules"
    puppet.manifest_file  = "init.pp"
    puppet.options = "--debug --verbose --modulepath /vagrant/puppet/modules"

  end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", "1024"]
    #disk1, disk2 = "tmp/disk-#{Time.now.to_f}.vdi", "tmp/disk-#{Time.now.to_f}.vdi"
    #vb.customize ["createhd", "--filename", disk1, "--size", 250]
    #vb.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", 1,"--type", "hdd", "--medium", disk1]
    #vb.customize ["createhd", "--filename", disk2, "--size", 250]
    #vb.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", 2,"--type", "hdd", "--medium", disk2]
  end
end
